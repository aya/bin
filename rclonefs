#!/bin/bash
# link: https://github.com/rclone/rclone/wiki/rclone-mount-helper-script

remote=${1}
mountpoint=${2}
shift 2

# Process -o parameters
while getopts :o: opts; do
    case ${opts} in
        o)
            params=${OPTARG//,/ }
            for param in ${params}; do
                if [ "${param}" == "rw"   ]; then continue; fi
                if [ "${param}" == "ro"   ]; then continue; fi
                if [ "${param}" == "dev"  ]; then continue; fi
                if [ "${param}" == "suid" ]; then continue; fi
                if [ "${param}" == "exec" ]; then continue; fi
                if [ "${param}" == "auto" ]; then continue; fi
                if [ "${param}" == "nodev" ]; then continue; fi
                if [ "${param}" == "nosuid" ]; then continue; fi
                if [ "${param}" == "noexec" ]; then continue; fi
                if [ "${param}" == "noauto" ]; then continue; fi
                if [[ ${param} == x-systemd.* ]]; then continue; fi
                trans="${trans} --${param}"
            done
            ;;
        \?)
            echo "Invalid option: -${OPTARG}"
            ;;
    esac
done

# exec rclone
trans="${trans} ${remote} ${mountpoint}"
# NOTE: do not try "mount --daemon" here, it does not play well with systemd automount, use '&'!
PATH="${PATH}" rclone mount "${trans}" </dev/null >/dev/null 2>/dev/null &

# Wait for rclone to finish the mount
until grep -q " ${mountpoint// /\\\\040} fuse.rclone " /proc/mounts; do
  sleep 0.5
done
